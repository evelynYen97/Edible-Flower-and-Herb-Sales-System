<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picHeader.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOMSURBVFhHxVfJ
        bhNBELUEB/ZFQmI9sJz4Bw6AkFgERzhglmMgSPABLCcEhyiR+AI4QkQ4AAc+ghAkQEIiYWY8PR0vMp4e
        21kQkXnVU+PpGXscG8XkSSW1q15V9XR1dbdzg8JWXquXMG146JbUFKYND+1kgefagZwMBeP/PwE5yaqc
        nsRaTKDVam1wAnmCf3ZAVMWh1SZAHFZ3gGJTDv7ZCcsXt3Ug33vj+KWjrNaJHSVfwLYcJcqaAHEc5T03
        J0KxKCbZKQerk3B8ZzcIFSPQkhN4T20l8xhXDT3JItnYFV9GPG8pxYGPzHexVSgXu8awlPfMIHUXX3zB
        Slwvl8vb2K2N75XKdkeJG+B97fBLCeVitxB2XR7HbH9rQrijRyHlyAGyguT3Ub+N7JIJ4thKPNQ+sX8J
        S38r7hbkQk52wRIq70NMlnnSWTVrF8YTqN2C44srmjgAyAfxmogxPvdrbifpML4a5aGcITEQF+PknjI3
        H+FHtbqDhwlYjfI+x/fOoMaXZCD3sDqBtG/BLxyjHFE+yp3DF45FChZsMPGkW50JlAzlmALvj+Gzgrq+
        chfcg0xLgGLxZlw0fKjbxjTBqrknUZ/PCaPyPNsvHtEEhk6uPCvFM0TMFZqFA0zXoBhYepngIRflZEoI
        OiCwUUZAqDNx2W25m9mswV8eBZqmnkZX3KXuiPS0EkzXoBjQR+dHnXL0PIww21kmf2SVBtUcumjZp62W
        tYlNORobk1ghLps0oPsU2uQsq7IBYoPI+JK3rNKw1fz5MIg+zUZY3QZW4l5kt2viFKs1oHvHtgarsgGS
        LkHnBNwLHKTrBKCnsyO0K3mW1Rr48vdsq7MqG1kl4A0YHS4zZgm4zrzMXUswE9p6lKCfTYjD4yXb9CQg
        9NWjiQ4KxGuma0gpt0DfexP224bU59RqKZ4pjt209zNdw6rNH0a/iwTPbMNBDyLqc2o18Myznu6KqXTy
        CMVicSuW/zHFNnzCg+hfj+KfjdJeJD2NDXeOxqxOIO2r3wXpo1gbsi+jceiauFgua+IA0JcRLjLEmKBY
        WqfktXby6DIiZFzHpYgMwXKLB3TVsksmiIPgj0Kftj9d7XfivZC6jgmo6+oPEjw26NFBjw92a4N0ViBu
        gvMt5dMhlIvdYqzBkyy5wQZ9khHQo+v3KCXQAbGuz/J+sNoEWDU8xBNY779mGcK04aFbUlOY1idyub/2
        zBkufnAQ8QAAAABJRU5ErkJggg==
</value>
  </data>
</root>